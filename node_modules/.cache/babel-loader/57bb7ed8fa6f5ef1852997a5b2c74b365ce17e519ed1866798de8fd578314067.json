{"ast":null,"code":"\"use client\";\n\nimport * as o from \"react\";\nimport f from \"classnames\";\nimport { composeEventHandlers as u } from \"@radix-ui/primitive\";\nimport { composeRefs as l } from \"@radix-ui/react-compose-refs\";\nimport { radioPropDefs as R } from \"./radio.props.js\";\nimport { marginPropDefs as c } from \"../props/margin.props.js\";\nimport { extractProps as P } from \"../helpers/extract-props.js\";\nconst e = o.forwardRef((r, t) => {\n  const p = o.useRef(null),\n    {\n      className: a,\n      color: s,\n      onChange: i,\n      onValueChange: n,\n      ...m\n    } = P(r, R, c);\n  return o.createElement(\"input\", {\n    type: \"radio\",\n    \"data-accent-color\": s,\n    ...m,\n    onChange: u(i, d => n?.(d.currentTarget.value)),\n    ref: l(p, t),\n    className: f(\"rt-reset\", \"rt-BaseRadioRoot\", \"rt-RadioRoot\", a)\n  });\n});\ne.displayName = \"Radio\";\nexport { e as Radio };","map":{"version":3,"names":["o","f","composeEventHandlers","u","composeRefs","l","radioPropDefs","R","marginPropDefs","c","extractProps","P","e","forwardRef","r","t","p","useRef","className","a","color","s","onChange","i","onValueChange","n","m","createElement","type","d","currentTarget","value","ref","displayName","Radio"],"sources":["C:\\Users\\Seulgi Baek\\vscode\\databasedesign\\database_project\\frontend\\node_modules\\@radix-ui\\themes\\src\\components\\radio.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { composeRefs } from '@radix-ui/react-compose-refs';\n\nimport { radioPropDefs } from './radio.props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { ComponentPropsWithout } from '../helpers/component-props.js';\nimport type { NotInputRadioAttributes } from '../helpers/input-attributes.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype RadioElement = React.ElementRef<'input'>;\ntype RadioOwnProps = GetPropDefTypes<typeof radioPropDefs> & {\n  value: string;\n  onValueChange?: (value: string) => void;\n};\ntype RadioInputProps = ComponentPropsWithout<\n  'input',\n  NotInputRadioAttributes | 'color' | 'defaultValue' | 'value'\n>;\ninterface RadioProps extends RadioInputProps, MarginProps, RadioOwnProps {}\n\nconst Radio = React.forwardRef<RadioElement, RadioProps>((props, forwardedRef) => {\n  const ref = React.useRef<RadioElement>(null);\n  const { className, color, onChange, onValueChange, ...radioProps } = extractProps(\n    props,\n    radioPropDefs,\n    marginPropDefs\n  );\n  return (\n    <input\n      type=\"radio\"\n      data-accent-color={color}\n      {...radioProps}\n      onChange={composeEventHandlers(onChange, (event) =>\n        onValueChange?.(event.currentTarget.value)\n      )}\n      ref={composeRefs(ref, forwardedRef)}\n      className={classNames('rt-reset', 'rt-BaseRadioRoot', 'rt-RadioRoot', className)}\n    />\n  );\n});\nRadio.displayName = 'Radio';\n\nexport { Radio };\nexport type { RadioProps };\n"],"mappings":";;AAEA,YAAYA,CAAA,MAAW;AACvB,OAAOC,CAAA,MAAgB;AACvB,SAASC,oBAAA,IAAAC,CAAA,QAA4B;AACrC,SAASC,WAAA,IAAAC,CAAA,QAAmB;AAE5B,SAASC,aAAA,IAAAC,CAAA,QAAqB;AAC9B,SAASC,cAAA,IAAAC,CAAA,QAAsB;AAC/B,SAASC,YAAA,IAAAC,CAAA,QAAoB;AAkB7B,MAAMC,CAAA,GAAQZ,CAAA,CAAMa,UAAA,CAAqC,CAACC,CAAA,EAAOC,CAAA,KAAiB;EAChF,MAAMC,CAAA,GAAMhB,CAAA,CAAMiB,MAAA,CAAqB,IAAI;IACrC;MAAEC,SAAA,EAAAC,CAAA;MAAWC,KAAA,EAAAC,CAAA;MAAOC,QAAA,EAAAC,CAAA;MAAUC,aAAA,EAAAC,CAAA;MAAe,GAAGC;IAAW,IAAIf,CAAA,CACnEG,CAAA,EACAP,CAAA,EACAE,CACF;EACA,OACET,CAAA,CAAA2B,aAAA,CAAC;IACCC,IAAA,EAAK;IACL,qBAAmBP,CAAA;IAClB,GAAGK,CAAA;IACJJ,QAAA,EAAUnB,CAAA,CAAqBoB,CAAA,EAAWM,CAAA,IACxCJ,CAAA,GAAgBI,CAAA,CAAMC,aAAA,CAAcC,KAAK,CAC3C;IACAC,GAAA,EAAK3B,CAAA,CAAYW,CAAA,EAAKD,CAAY;IAClCG,SAAA,EAAWjB,CAAA,CAAW,YAAY,oBAAoB,gBAAgBkB,CAAS;EAAA,CACjF,CAEJ;AAAA,CAAC;AACDP,CAAA,CAAMqB,WAAA,GAAc;AAAA,SAAArB,CAAA,IAAAsB,KAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}