{"ast":null,"code":"import o from \"classnames\";\nimport { getResponsiveClassNames as P, getResponsiveStyles as g } from \"./get-responsive-styles.js\";\nimport { isResponsiveObject as p } from \"./is-responsive-object.js\";\nimport { mergeStyles as c } from \"./merge-styles.js\";\nfunction N(...r) {\n  return Object.assign({}, ...r);\n}\nfunction v(r, ...m) {\n  let t, l;\n  const a = {\n      ...r\n    },\n    f = N(...m);\n  for (const n in f) {\n    let s = a[n];\n    const e = f[n];\n    if (e.default !== void 0 && s === void 0 && (s = e.default), e.type === \"enum\" && ![e.default, ...e.values].includes(s) && !p(s) && (s = e.default), a[n] = s, \"className\" in e && e.className) {\n      delete a[n];\n      const u = \"responsive\" in e;\n      if (!s || p(s) && !u) continue;\n      if (p(s) && (e.default !== void 0 && s.initial === void 0 && (s.initial = e.default), e.type === \"enum\" && ([e.default, ...e.values].includes(s.initial) || (s.initial = e.default))), e.type === \"enum\") {\n        const i = P({\n          allowArbitraryValues: !1,\n          value: s,\n          className: e.className,\n          propValues: e.values,\n          parseValue: e.parseValue\n        });\n        t = o(t, i);\n        continue;\n      }\n      if (e.type === \"string\" || e.type === \"enum | string\") {\n        const i = e.type === \"string\" ? [] : e.values,\n          [d, y] = g({\n            className: e.className,\n            customProperties: e.customProperties,\n            propValues: i,\n            parseValue: e.parseValue,\n            value: s\n          });\n        l = c(l, y), t = o(t, d);\n        continue;\n      }\n      if (e.type === \"boolean\" && s) {\n        t = o(t, e.className);\n        continue;\n      }\n    }\n  }\n  return a.className = o(t, r.className), a.style = c(l, r.style), a;\n}\nexport { v as extractProps };","map":{"version":3,"names":["o","getResponsiveClassNames","P","getResponsiveStyles","g","isResponsiveObject","p","mergeStyles","c","N","r","Object","assign","v","m","t","l","a","f","n","s","e","default","type","values","includes","className","u","initial","i","allowArbitraryValues","value","propValues","parseValue","d","y","customProperties","style","extractProps"],"sources":["C:\\Users\\Seulgi Baek\\vscode\\databasedesign\\database_project\\frontend\\node_modules\\@radix-ui\\themes\\src\\helpers\\extract-props.ts"],"sourcesContent":["import classNames from 'classnames';\n\nimport { getResponsiveClassNames, getResponsiveStyles } from './get-responsive-styles.js';\nimport { isResponsiveObject } from './is-responsive-object.js';\nimport { mergeStyles } from './merge-styles.js';\n\nimport type * as React from 'react';\nimport type { PropDef } from '../props/prop-def.js';\n\ntype PropDefsWithClassName<T> = T extends Record<string, PropDef>\n  ? { [K in keyof T]: T[K] extends { className: string } ? K : never }[keyof T]\n  : never;\n\nfunction mergePropDefs<T extends Record<string, PropDef>[]>(...args: T): Record<string, PropDef> {\n  return Object.assign({}, ...args);\n}\n\n/**\n * Takes props, checks them against prop defs that have a `className` on them,\n * adds necessary CSS classes and inline styles, and returns the props without\n * the corresponding prop defs that were used to formulate the new `className`\n * and `style` values. Also applies prop def defaults to every prop.\n */\nfunction extractProps<\n  P extends { className?: string; style?: React.CSSProperties; [key: string]: any },\n  T extends Record<string, PropDef>[]\n>(\n  props: P,\n  ...propDefs: T\n): Omit<P & { className?: string; style?: React.CSSProperties }, PropDefsWithClassName<T[number]>> {\n  let className: string | undefined;\n  let style: ReturnType<typeof mergeStyles>;\n  const extractedProps = { ...props };\n  const allPropDefs = mergePropDefs(...propDefs);\n\n  for (const key in allPropDefs) {\n    let value = extractedProps[key];\n    const propDef = allPropDefs[key];\n\n    // Apply prop def defaults\n    if (propDef.default !== undefined && value === undefined) {\n      value = propDef.default;\n    }\n\n    // Apply the default value if the value is not a valid enum value\n    if (propDef.type === 'enum') {\n      const values = [propDef.default, ...propDef.values];\n\n      if (!values.includes(value) && !isResponsiveObject(value)) {\n        value = propDef.default;\n      }\n    }\n\n    // Apply the value with defaults\n    (extractedProps as Record<string, any>)[key] = value;\n\n    if ('className' in propDef && propDef.className) {\n      delete extractedProps[key];\n\n      const isResponsivePropDef = 'responsive' in propDef;\n      // Make sure we are not threading through responsive values for non-responsive prop defs\n      if (!value || (isResponsiveObject(value) && !isResponsivePropDef)) {\n        continue;\n      }\n\n      if (isResponsiveObject(value)) {\n        // Apply prop def defaults to the `initial` breakpoint\n        if (propDef.default !== undefined && value.initial === undefined) {\n          value.initial = propDef.default;\n        }\n\n        // Apply the default value to the `initial` breakpoint when it is not a valid enum value\n        if (propDef.type === 'enum') {\n          const values = [propDef.default, ...propDef.values];\n\n          if (!values.includes(value.initial)) {\n            value.initial = propDef.default;\n          }\n        }\n      }\n\n      if (propDef.type === 'enum') {\n        const propClassName = getResponsiveClassNames({\n          allowArbitraryValues: false,\n          value,\n          className: propDef.className,\n          propValues: propDef.values,\n          parseValue: propDef.parseValue,\n        });\n\n        className = classNames(className, propClassName);\n        continue;\n      }\n\n      if (propDef.type === 'string' || propDef.type === 'enum | string') {\n        const propDefValues = propDef.type === 'string' ? [] : propDef.values;\n\n        const [propClassNames, propCustomProperties] = getResponsiveStyles({\n          className: propDef.className,\n          customProperties: propDef.customProperties,\n          propValues: propDefValues,\n          parseValue: propDef.parseValue,\n          value,\n        });\n\n        style = mergeStyles(style, propCustomProperties);\n        className = classNames(className, propClassNames);\n        continue;\n      }\n\n      if (propDef.type === 'boolean' && value) {\n        // TODO handle responsive boolean props\n        className = classNames(className, propDef.className);\n        continue;\n      }\n    }\n  }\n\n  extractedProps.className = classNames(className, props.className);\n  extractedProps.style = mergeStyles(style, props.style);\n  return extractedProps;\n}\n\nexport { extractProps };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}