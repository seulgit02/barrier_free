{"ast":null,"code":"import * as o from \"react\";\nimport n from \"classnames\";\nimport { Slot as i } from \"./slot.js\";\nimport { boxPropDefs as P } from \"./box.props.js\";\nimport { extractProps as x } from \"../helpers/extract-props.js\";\nimport { layoutPropDefs as f } from \"../props/layout.props.js\";\nimport { marginPropDefs as B } from \"../props/margin.props.js\";\nconst p = o.forwardRef((r, s) => {\n  const {\n    className: t,\n    asChild: e,\n    as: m = \"div\",\n    ...a\n  } = x(r, P, f, B);\n  return o.createElement(e ? i : m, {\n    ...a,\n    ref: s,\n    className: n(\"rt-Box\", t)\n  });\n});\np.displayName = \"Box\";\nexport { p as Box };","map":{"version":3,"names":["o","n","Slot","i","boxPropDefs","P","extractProps","x","layoutPropDefs","f","marginPropDefs","B","p","forwardRef","r","s","className","t","asChild","e","as","m","a","createElement","ref","displayName","Box"],"sources":["C:\\Users\\Seulgi Baek\\vscode\\databasedesign\\database_project\\frontend\\node_modules\\@radix-ui\\themes\\src\\components\\box.tsx"],"sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\n\nimport { Slot } from './slot.js';\nimport { boxPropDefs } from './box.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { layoutPropDefs } from '../props/layout.props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { LayoutProps } from '../props/layout.props.js';\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { BoxOwnProps } from './box.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\n\ntype BoxElement = React.ElementRef<'div'>;\ninterface CommonBoxProps extends MarginProps, LayoutProps, BoxOwnProps {}\ntype BoxDivProps = { as?: 'div' } & ComponentPropsWithout<'div', RemovedProps>;\ntype BoxSpanProps = { as: 'span' } & ComponentPropsWithout<'span', RemovedProps>;\ntype BoxProps = CommonBoxProps & (BoxSpanProps | BoxDivProps);\n\nconst Box = React.forwardRef<BoxElement, BoxProps>((props, forwardedRef) => {\n  const {\n    className,\n    asChild,\n    as: Tag = 'div',\n    ...boxProps\n  } = extractProps(props, boxPropDefs, layoutPropDefs, marginPropDefs);\n  const Comp = asChild ? Slot : Tag;\n  return <Comp {...boxProps} ref={forwardedRef} className={classNames('rt-Box', className)} />;\n});\nBox.displayName = 'Box';\n\nexport { Box };\nexport type { BoxProps };\n"],"mappings":"AAAA,YAAYA,CAAA,MAAW;AACvB,OAAOC,CAAA,MAAgB;AAEvB,SAASC,IAAA,IAAAC,CAAA,QAAY;AACrB,SAASC,WAAA,IAAAC,CAAA,QAAmB;AAC5B,SAASC,YAAA,IAAAC,CAAA,QAAoB;AAC7B,SAASC,cAAA,IAAAC,CAAA,QAAsB;AAC/B,SAASC,cAAA,IAAAC,CAAA,QAAsB;AAa/B,MAAMC,CAAA,GAAMZ,CAAA,CAAMa,UAAA,CAAiC,CAACC,CAAA,EAAOC,CAAA,KAAiB;EAC1E,MAAM;IACJC,SAAA,EAAAC,CAAA;IACAC,OAAA,EAAAC,CAAA;IACAC,EAAA,EAAIC,CAAA,GAAM;IACV,GAAGC;EACL,IAAIf,CAAA,CAAaO,CAAA,EAAOT,CAAA,EAAaI,CAAA,EAAgBE,CAAc;EAEnE,OAAOX,CAAA,CAAAuB,aAAA,CADMJ,CAAA,GAAUhB,CAAA,GAAOkB,CAAA,EACtB;IAAM,GAAGC,CAAA;IAAUE,GAAA,EAAKT,CAAA;IAAcC,SAAA,EAAWf,CAAA,CAAW,UAAUgB,CAAS;EAAA,CAAG,CAC5F;AAAA,CAAC;AACDL,CAAA,CAAIa,WAAA,GAAc;AAAA,SAAAb,CAAA,IAAAc,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}