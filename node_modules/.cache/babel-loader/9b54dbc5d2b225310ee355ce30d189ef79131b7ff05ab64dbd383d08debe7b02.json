{"ast":null,"code":"import * as a from \"react\";\nfunction d(i, e) {\n  const {\n    asChild: r,\n    children: c\n  } = i;\n  if (!r) return typeof e == \"function\" ? e(c) : e;\n  const t = a.Children.only(c);\n  return a.cloneElement(t, {\n    children: typeof e == \"function\" ? e(t.props.children) : e\n  });\n}\nexport { d as getSubtree };","map":{"version":3,"names":["a","d","i","e","asChild","r","children","c","t","Children","only","cloneElement","props","getSubtree"],"sources":["C:\\Users\\Seulgi Baek\\vscode\\databasedesign\\database_project\\frontend\\node_modules\\@radix-ui\\themes\\src\\helpers\\get-subtree.ts"],"sourcesContent":["import * as React from 'react';\n\n/**\n * This is a helper function that is used when a component supports `asChild`\n * using the `Slot` component but its implementation contains nested DOM elements.\n *\n * Using it ensures if a consumer uses the `asChild` prop, the elements are in\n * correct order in the DOM, adopting the intended consumer `children`.\n */\nexport function getSubtree(\n  options: { asChild: boolean | undefined; children: React.ReactNode },\n  content: React.ReactNode | ((children: React.ReactNode) => React.ReactNode)\n) {\n  const { asChild, children } = options;\n  if (!asChild) return typeof content === 'function' ? content(children) : content;\n\n  const firstChild = React.Children.only(children) as React.ReactElement;\n  return React.cloneElement(firstChild, {\n    children: typeof content === 'function' ? content(firstChild.props.children) : content,\n  });\n}\n"],"mappings":"AAAA,YAAYA,CAAA,MAAW;AAShB,SAASC,EACdC,CAAA,EACAC,CAAA,EACA;EACA,MAAM;IAAEC,OAAA,EAAAC,CAAA;IAASC,QAAA,EAAAC;EAAS,IAAIL,CAAA;EAC9B,IAAI,CAACG,CAAA,EAAS,OAAO,OAAOF,CAAA,IAAY,aAAaA,CAAA,CAAQI,CAAQ,IAAIJ,CAAA;EAEzE,MAAMK,CAAA,GAAaR,CAAA,CAAMS,QAAA,CAASC,IAAA,CAAKH,CAAQ;EAC/C,OAAOP,CAAA,CAAMW,YAAA,CAAaH,CAAA,EAAY;IACpCF,QAAA,EAAU,OAAOH,CAAA,IAAY,aAAaA,CAAA,CAAQK,CAAA,CAAWI,KAAA,CAAMN,QAAQ,IAAIH;EACjF,CAAC,CACH;AAAA;AAAA,SAAAF,CAAA,IAAAY,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}