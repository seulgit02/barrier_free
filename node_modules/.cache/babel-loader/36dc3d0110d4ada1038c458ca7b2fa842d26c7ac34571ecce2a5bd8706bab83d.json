{"ast":null,"code":"import * as o from \"react\";\nimport d from \"classnames\";\nimport { Slot as f } from \"@radix-ui/react-slot\";\nimport { badgePropDefs as i } from \"./badge.props.js\";\nimport { extractProps as P } from \"../helpers/extract-props.js\";\nimport { marginPropDefs as g } from \"../props/margin.props.js\";\nconst e = o.forwardRef((r, p) => {\n  const {\n    asChild: s,\n    className: t,\n    color: a,\n    radius: m,\n    ...n\n  } = P(r, i, g);\n  return o.createElement(s ? f : \"span\", {\n    \"data-accent-color\": a,\n    \"data-radius\": m,\n    ...n,\n    ref: p,\n    className: d(\"rt-reset\", \"rt-Badge\", t)\n  });\n});\ne.displayName = \"Badge\";\nexport { e as Badge };","map":{"version":3,"names":["o","d","Slot","f","badgePropDefs","i","extractProps","P","marginPropDefs","g","e","forwardRef","r","p","asChild","s","className","t","color","a","radius","m","n","createElement","ref","displayName","Badge"],"sources":["C:\\Users\\Seulgi Baek\\vscode\\databasedesign\\database_project\\frontend\\node_modules\\@radix-ui\\themes\\src\\components\\badge.tsx"],"sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport { Slot } from '@radix-ui/react-slot';\n\nimport { badgePropDefs } from './badge.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype BadgeElement = React.ElementRef<'span'>;\ntype BadgeOwnProps = GetPropDefTypes<typeof badgePropDefs>;\ninterface BadgeProps\n  extends ComponentPropsWithout<'span', RemovedProps>,\n    MarginProps,\n    BadgeOwnProps {}\nconst Badge = React.forwardRef<BadgeElement, BadgeProps>((props, forwardedRef) => {\n  const { asChild, className, color, radius, ...badgeProps } = extractProps(\n    props,\n    badgePropDefs,\n    marginPropDefs\n  );\n  const Comp = asChild ? Slot : 'span';\n  return (\n    <Comp\n      data-accent-color={color}\n      data-radius={radius}\n      {...badgeProps}\n      ref={forwardedRef}\n      className={classNames('rt-reset', 'rt-Badge', className)}\n    />\n  );\n});\nBadge.displayName = 'Badge';\n\nexport { Badge };\nexport type { BadgeProps };\n"],"mappings":"AAAA,YAAYA,CAAA,MAAW;AACvB,OAAOC,CAAA,MAAgB;AACvB,SAASC,IAAA,IAAAC,CAAA,QAAY;AAErB,SAASC,aAAA,IAAAC,CAAA,QAAqB;AAC9B,SAASC,YAAA,IAAAC,CAAA,QAAoB;AAC7B,SAASC,cAAA,IAAAC,CAAA,QAAsB;AAY/B,MAAMC,CAAA,GAAQV,CAAA,CAAMW,UAAA,CAAqC,CAACC,CAAA,EAAOC,CAAA,KAAiB;EAChF,MAAM;IAAEC,OAAA,EAAAC,CAAA;IAASC,SAAA,EAAAC,CAAA;IAAWC,KAAA,EAAAC,CAAA;IAAOC,MAAA,EAAAC,CAAA;IAAQ,GAAGC;EAAW,IAAIf,CAAA,CAC3DK,CAAA,EACAP,CAAA,EACAI,CACF;EAEA,OACET,CAAA,CAAAuB,aAAA,CAFWR,CAAA,GAAUZ,CAAA,GAAO,QAE3B;IACC,qBAAmBgB,CAAA;IACnB,eAAaE,CAAA;IACZ,GAAGC,CAAA;IACJE,GAAA,EAAKX,CAAA;IACLG,SAAA,EAAWf,CAAA,CAAW,YAAY,YAAYgB,CAAS;EAAA,CACzD,CAEJ;AAAA,CAAC;AACDP,CAAA,CAAMe,WAAA,GAAc;AAAA,SAAAf,CAAA,IAAAgB,KAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}