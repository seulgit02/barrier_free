{"ast":null,"code":"import * as e from \"react\";\nimport t from \"classnames\";\nimport { tableRootPropDefs as p, tableRowPropDefs as u, tableCellPropDefs as n } from \"./table.props.js\";\nimport { extractProps as s } from \"../helpers/extract-props.js\";\nimport { getResponsiveClassNames as H } from \"../helpers/get-responsive-styles.js\";\nimport { marginPropDefs as N } from \"../props/margin.props.js\";\nimport { ScrollArea as E } from \"./scroll-area.js\";\nconst m = e.forwardRef((o, l) => {\n  const {\n      layout: a,\n      ...r\n    } = p,\n    {\n      className: C,\n      children: c,\n      layout: y,\n      ...i\n    } = s(o, r, N),\n    w = H({\n      value: y,\n      className: p.layout.className,\n      propValues: p.layout.values\n    });\n  return e.createElement(\"div\", {\n    ref: l,\n    className: t(\"rt-TableRoot\", C),\n    ...i\n  }, e.createElement(E, null, e.createElement(\"table\", {\n    className: t(\"rt-TableRootTable\", w)\n  }, c)));\n});\nm.displayName = \"Table.Root\";\nconst d = e.forwardRef(({\n  className: o,\n  ...l\n}, a) => e.createElement(\"thead\", {\n  ...l,\n  ref: a,\n  className: t(\"rt-TableHeader\", o)\n}));\nd.displayName = \"Table.Header\";\nconst b = e.forwardRef(({\n  className: o,\n  ...l\n}, a) => e.createElement(\"tbody\", {\n  ...l,\n  ref: a,\n  className: t(\"rt-TableBody\", o)\n}));\nb.displayName = \"Table.Body\";\nconst P = e.forwardRef((o, l) => {\n  const {\n    className: a,\n    ...r\n  } = s(o, u);\n  return e.createElement(\"tr\", {\n    ...r,\n    ref: l,\n    className: t(\"rt-TableRow\", a)\n  });\n});\nP.displayName = \"Table.Row\";\nconst T = e.forwardRef((o, l) => {\n  const {\n    className: a,\n    ...r\n  } = s(o, n);\n  return e.createElement(\"td\", {\n    className: t(\"rt-TableCell\", a),\n    ref: l,\n    ...r\n  });\n});\nT.displayName = \"Table.Cell\";\nconst f = e.forwardRef((o, l) => {\n  const {\n    className: a,\n    ...r\n  } = s(o, n);\n  return e.createElement(\"th\", {\n    className: t(\"rt-TableCell\", \"rt-TableColumnHeaderCell\", a),\n    scope: \"col\",\n    ref: l,\n    ...r\n  });\n});\nf.displayName = \"Table.ColumnHeaderCell\";\nconst R = e.forwardRef((o, l) => {\n  const {\n    className: a,\n    ...r\n  } = s(o, n);\n  return e.createElement(\"th\", {\n    className: t(\"rt-TableCell\", \"rt-TableRowHeaderCell\", a),\n    scope: \"row\",\n    ref: l,\n    ...r\n  });\n});\nR.displayName = \"Table.RowHeaderCell\";\nexport { b as Body, T as Cell, f as ColumnHeaderCell, d as Header, m as Root, P as Row, R as RowHeaderCell };","map":{"version":3,"names":["e","t","tableRootPropDefs","p","tableRowPropDefs","u","tableCellPropDefs","n","extractProps","s","getResponsiveClassNames","H","marginPropDefs","N","ScrollArea","E","m","forwardRef","o","l","layout","a","r","className","C","children","c","y","i","w","value","propValues","values","createElement","ref","displayName","d","b","P","T","f","scope","R","Body","Cell","ColumnHeaderCell","Header","Root","Row","RowHeaderCell"],"sources":["C:\\Users\\Seulgi Baek\\vscode\\databasedesign\\database_project\\frontend\\node_modules\\@radix-ui\\themes\\src\\components\\table.tsx"],"sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\n\nimport { tableRootPropDefs, tableRowPropDefs, tableCellPropDefs } from './table.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { getResponsiveClassNames } from '../helpers/get-responsive-styles.js';\nimport { marginPropDefs } from '../props/margin.props.js';\nimport { ScrollArea } from './scroll-area.js';\n\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype TableRootElement = React.ElementRef<'div'>;\ntype TableRootOwnProps = GetPropDefTypes<typeof tableRootPropDefs>;\ninterface TableRootProps\n  extends ComponentPropsWithout<'div', RemovedProps>,\n    MarginProps,\n    TableRootOwnProps {}\nconst TableRoot = React.forwardRef<TableRootElement, TableRootProps>((props, forwardedRef) => {\n  const { layout: layoutPropDef, ...rootPropDefs } = tableRootPropDefs;\n  const { className, children, layout, ...rootProps } = extractProps(\n    props,\n    rootPropDefs,\n    marginPropDefs\n  );\n  const tableLayoutClassNames = getResponsiveClassNames({\n    value: layout,\n    className: tableRootPropDefs.layout.className,\n    propValues: tableRootPropDefs.layout.values,\n  });\n  return (\n    <div ref={forwardedRef} className={classNames('rt-TableRoot', className)} {...rootProps}>\n      <ScrollArea>\n        <table className={classNames('rt-TableRootTable', tableLayoutClassNames)}>{children}</table>\n      </ScrollArea>\n    </div>\n  );\n});\nTableRoot.displayName = 'Table.Root';\n\ntype TableHeaderElement = React.ElementRef<'thead'>;\ninterface TableHeaderProps extends ComponentPropsWithout<'thead', RemovedProps> {}\nconst TableHeader = React.forwardRef<TableHeaderElement, TableHeaderProps>(\n  ({ className, ...props }, forwardedRef) => (\n    <thead {...props} ref={forwardedRef} className={classNames('rt-TableHeader', className)} />\n  )\n);\nTableHeader.displayName = 'Table.Header';\n\ntype TableBodyElement = React.ElementRef<'tbody'>;\ninterface TableBodyProps extends ComponentPropsWithout<'tbody', RemovedProps> {}\nconst TableBody = React.forwardRef<TableBodyElement, TableBodyProps>(\n  ({ className, ...props }, forwardedRef) => (\n    <tbody {...props} ref={forwardedRef} className={classNames('rt-TableBody', className)} />\n  )\n);\nTableBody.displayName = 'Table.Body';\n\ntype TableRowElement = React.ElementRef<'tr'>;\ntype TableRowOwnProps = GetPropDefTypes<typeof tableRowPropDefs>;\ninterface TableRowProps extends ComponentPropsWithout<'tr', RemovedProps>, TableRowOwnProps {}\nconst TableRow = React.forwardRef<TableRowElement, TableRowProps>((props, forwardedRef) => {\n  const { className, ...rowProps } = extractProps(props, tableRowPropDefs);\n  return <tr {...rowProps} ref={forwardedRef} className={classNames('rt-TableRow', className)} />;\n});\nTableRow.displayName = 'Table.Row';\n\ntype TableCellElement = React.ElementRef<'td'>;\ntype TableCellOwnProps = GetPropDefTypes<typeof tableCellPropDefs>;\ninterface TableCellProps\n  extends ComponentPropsWithout<'td', RemovedProps | 'width'>,\n    TableCellOwnProps {}\nconst TableCell = React.forwardRef<TableCellElement, TableCellProps>((props, forwardedRef) => {\n  const { className, ...cellProps } = extractProps(props, tableCellPropDefs);\n  return <td className={classNames('rt-TableCell', className)} ref={forwardedRef} {...cellProps} />;\n});\nTableCell.displayName = 'Table.Cell';\n\ntype TableColumnHeaderCellElement = React.ElementRef<'th'>;\ninterface TableColumnHeaderCellProps\n  extends ComponentPropsWithout<'th', RemovedProps>,\n    TableCellOwnProps {}\nconst TableColumnHeaderCell = React.forwardRef<\n  TableColumnHeaderCellElement,\n  TableColumnHeaderCellProps\n>((props, forwardedRef) => {\n  const { className, ...cellProps } = extractProps(props, tableCellPropDefs);\n  return (\n    <th\n      className={classNames('rt-TableCell', 'rt-TableColumnHeaderCell', className)}\n      scope=\"col\"\n      ref={forwardedRef}\n      {...cellProps}\n    />\n  );\n});\nTableColumnHeaderCell.displayName = 'Table.ColumnHeaderCell';\n\ntype TableRowHeaderCellElement = React.ElementRef<'th'>;\ninterface TableRowHeaderCellProps\n  extends ComponentPropsWithout<'th', RemovedProps>,\n    TableCellOwnProps {}\nconst TableRowHeaderCell = React.forwardRef<TableRowHeaderCellElement, TableRowHeaderCellProps>(\n  (props, forwardedRef) => {\n    const { className, ...cellProps } = extractProps(props, tableCellPropDefs);\n    return (\n      <th\n        className={classNames('rt-TableCell', 'rt-TableRowHeaderCell', className)}\n        scope=\"row\"\n        ref={forwardedRef}\n        {...cellProps}\n      />\n    );\n  }\n);\nTableRowHeaderCell.displayName = 'Table.RowHeaderCell';\n\nexport {\n  TableRoot as Root,\n  TableHeader as Header,\n  TableBody as Body,\n  TableRow as Row,\n  TableCell as Cell,\n  TableColumnHeaderCell as ColumnHeaderCell,\n  TableRowHeaderCell as RowHeaderCell,\n};\n\nexport type {\n  TableRootProps as RootProps,\n  TableHeaderProps as HeaderProps,\n  TableBodyProps as BodyProps,\n  TableRowProps as RowProps,\n  TableCellProps as CellProps,\n  TableColumnHeaderCellProps as ColumnHeaderCellProps,\n  TableRowHeaderCellProps as RowHeaderCellProps,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}