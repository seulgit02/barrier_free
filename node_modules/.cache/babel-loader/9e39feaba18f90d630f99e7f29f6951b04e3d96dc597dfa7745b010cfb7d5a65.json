{"ast":null,"code":"import * as e from \"react\";\nimport n from \"classnames\";\nimport { Slot as i } from \"@radix-ui/react-slot\";\nimport { insetPropDefs as f } from \"./inset.props.js\";\nimport { extractProps as a } from \"../helpers/extract-props.js\";\nimport { marginPropDefs as P } from \"../props/margin.props.js\";\nconst o = e.forwardRef((r, p) => {\n  const {\n    asChild: t,\n    className: s,\n    ...m\n  } = a(r, f, P);\n  return e.createElement(t ? i : \"div\", {\n    ...m,\n    ref: p,\n    className: n(\"rt-Inset\", s)\n  });\n});\no.displayName = \"Inset\";\nexport { o as Inset };","map":{"version":3,"names":["e","n","Slot","i","insetPropDefs","f","extractProps","a","marginPropDefs","P","o","forwardRef","r","p","asChild","t","className","s","m","createElement","ref","displayName","Inset"],"sources":["C:\\Users\\Seulgi Baek\\vscode\\databasedesign\\database_project\\frontend\\node_modules\\@radix-ui\\themes\\src\\components\\inset.tsx"],"sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport { Slot } from '@radix-ui/react-slot';\n\nimport { insetPropDefs } from './inset.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype InsetElement = React.ElementRef<'div'>;\ntype InsetOwnProps = GetPropDefTypes<typeof insetPropDefs>;\ninterface InsetProps\n  extends ComponentPropsWithout<'div', RemovedProps>,\n    MarginProps,\n    InsetOwnProps {}\n\nconst Inset = React.forwardRef<InsetElement, InsetProps>((props, forwardedRef) => {\n  const { asChild, className, ...insetProps } = extractProps(props, insetPropDefs, marginPropDefs);\n  const Comp = asChild ? Slot : 'div';\n  return <Comp {...insetProps} ref={forwardedRef} className={classNames('rt-Inset', className)} />;\n});\nInset.displayName = 'Inset';\n\nexport { Inset };\nexport type { InsetProps };\n"],"mappings":"AAAA,YAAYA,CAAA,MAAW;AACvB,OAAOC,CAAA,MAAgB;AACvB,SAASC,IAAA,IAAAC,CAAA,QAAY;AAErB,SAASC,aAAA,IAAAC,CAAA,QAAqB;AAC9B,SAASC,YAAA,IAAAC,CAAA,QAAoB;AAC7B,SAASC,cAAA,IAAAC,CAAA,QAAsB;AAa/B,MAAMC,CAAA,GAAQV,CAAA,CAAMW,UAAA,CAAqC,CAACC,CAAA,EAAOC,CAAA,KAAiB;EAChF,MAAM;IAAEC,OAAA,EAAAC,CAAA;IAASC,SAAA,EAAAC,CAAA;IAAW,GAAGC;EAAW,IAAIX,CAAA,CAAaK,CAAA,EAAOP,CAAA,EAAeI,CAAc;EAE/F,OAAOT,CAAA,CAAAmB,aAAA,CADMJ,CAAA,GAAUZ,CAAA,GAAO,OACtB;IAAM,GAAGe,CAAA;IAAYE,GAAA,EAAKP,CAAA;IAAcG,SAAA,EAAWf,CAAA,CAAW,YAAYgB,CAAS;EAAA,CAAG,CAChG;AAAA,CAAC;AACDP,CAAA,CAAMW,WAAA,GAAc;AAAA,SAAAX,CAAA,IAAAY,KAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}