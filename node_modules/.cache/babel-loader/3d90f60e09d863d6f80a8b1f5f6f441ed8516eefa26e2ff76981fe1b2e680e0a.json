{"ast":null,"code":"function a(e) {\n  switch (e) {\n    case \"tomato\":\n    case \"red\":\n    case \"ruby\":\n    case \"crimson\":\n    case \"pink\":\n    case \"plum\":\n    case \"purple\":\n    case \"violet\":\n      return \"mauve\";\n    case \"iris\":\n    case \"indigo\":\n    case \"blue\":\n    case \"sky\":\n    case \"cyan\":\n      return \"slate\";\n    case \"teal\":\n    case \"jade\":\n    case \"mint\":\n    case \"green\":\n      return \"sage\";\n    case \"grass\":\n    case \"lime\":\n      return \"olive\";\n    case \"yellow\":\n    case \"amber\":\n    case \"orange\":\n    case \"brown\":\n    case \"gold\":\n    case \"bronze\":\n      return \"sand\";\n    case \"gray\":\n      return \"gray\";\n  }\n}\nexport { a as getMatchingGrayColor };","map":{"version":3,"names":["a","e","getMatchingGrayColor"],"sources":["C:\\Users\\Seulgi Baek\\vscode\\databasedesign\\database_project\\frontend\\node_modules\\@radix-ui\\themes\\src\\helpers\\get-matching-gray-color.ts"],"sourcesContent":["import type { accentColors } from '../props/color.prop.js';\n\ntype ThemeAccentColor = (typeof accentColors)[number];\n\nexport function getMatchingGrayColor(accentColor: ThemeAccentColor) {\n  switch (accentColor) {\n    case 'tomato':\n    case 'red':\n    case 'ruby':\n    case 'crimson':\n    case 'pink':\n    case 'plum':\n    case 'purple':\n    case 'violet':\n      return 'mauve';\n    case 'iris':\n    case 'indigo':\n    case 'blue':\n    case 'sky':\n    case 'cyan':\n      return 'slate';\n    case 'teal':\n    case 'jade':\n    case 'mint':\n    case 'green':\n      return 'sage';\n    case 'grass':\n    case 'lime':\n      return 'olive';\n    case 'yellow':\n    case 'amber':\n    case 'orange':\n    case 'brown':\n    case 'gold':\n    case 'bronze':\n      return 'sand';\n    case 'gray':\n      return 'gray';\n  }\n}\n"],"mappings":"AAIO,SAASA,EAAqBC,CAAA,EAA+B;EAClE,QAAQA,CAAA;IACN,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;MACH,OAAO;IACT,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;MACH,OAAO;IACT,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;MACH,OAAO;IACT,KAAK;IACL,KAAK;MACH,OAAO;IACT,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;MACH,OAAO;IACT,KAAK;MACH,OAAO,MACX;EAAA;AACF;AAAA,SAAAD,CAAA,IAAAE,oBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}