{"ast":null,"code":"import r from \"classnames\";\nimport * as t from \"react\";\nimport { Text as D } from \"./text.js\";\nimport { dataListRootPropDefs as P, dataListItemPropDefs as d, dataListLabelPropDefs as f } from \"./data-list.props.js\";\nimport { extractProps as p } from \"../helpers/extract-props.js\";\nimport { marginPropDefs as c } from \"../props/margin.props.js\";\nconst i = t.forwardRef((a, e) => {\n  const {\n    className: s,\n    ...o\n  } = p(a, P, c);\n  return t.createElement(D, {\n    asChild: !0\n  }, t.createElement(\"dl\", {\n    ...o,\n    ref: e,\n    className: r(\"rt-DataListRoot\", s)\n  }));\n});\ni.displayName = \"DataList.Root\";\nconst m = t.forwardRef((a, e) => {\n  const {\n    className: s,\n    ...o\n  } = p(a, d);\n  return t.createElement(\"div\", {\n    ...o,\n    ref: e,\n    className: r(\"rt-DataListItem\", s)\n  });\n});\nm.displayName = \"DataList.Item\";\nconst L = t.forwardRef((a, e) => {\n  const {\n    className: s,\n    color: o,\n    ...n\n  } = p(a, f);\n  return t.createElement(\"dt\", {\n    ...n,\n    \"data-accent-color\": o,\n    ref: e,\n    className: r(\"rt-DataListLabel\", s)\n  });\n});\nL.displayName = \"DataList.Label\";\nconst l = t.forwardRef(({\n  children: a,\n  className: e,\n  ...s\n}, o) => t.createElement(\"dd\", {\n  ...s,\n  ref: o,\n  className: r(e, \"rt-DataListValue\")\n}, a));\nl.displayName = \"DataList.Value\";\nexport { m as Item, L as Label, i as Root, l as Value };","map":{"version":3,"names":["r","t","Text","D","dataListRootPropDefs","P","dataListItemPropDefs","d","dataListLabelPropDefs","f","extractProps","p","marginPropDefs","c","i","forwardRef","a","e","className","s","o","createElement","asChild","ref","displayName","m","L","color","n","l","children","Item","Label","Root","Value"],"sources":["C:\\Users\\Seulgi Baek\\vscode\\databasedesign\\database_project\\frontend\\node_modules\\@radix-ui\\themes\\src\\components\\data-list.tsx"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\n\nimport { Text } from './text.js';\nimport {\n  dataListRootPropDefs,\n  dataListItemPropDefs,\n  dataListLabelPropDefs,\n} from './data-list.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype DataListRootElement = HTMLDListElement;\ntype DataListRootOwnProps = GetPropDefTypes<typeof dataListRootPropDefs>;\ninterface DataListRootProps\n  extends ComponentPropsWithout<'dl', RemovedProps>,\n    MarginProps,\n    DataListRootOwnProps {}\nconst DataListRoot = React.forwardRef<DataListRootElement, DataListRootProps>(\n  (props, forwardedRef) => {\n    const { className, ...dataListProps } = extractProps(\n      props,\n      dataListRootPropDefs,\n      marginPropDefs\n    );\n    return (\n      <Text asChild>\n        <dl\n          {...dataListProps}\n          ref={forwardedRef}\n          className={classNames('rt-DataListRoot', className)}\n        />\n      </Text>\n    );\n  }\n);\nDataListRoot.displayName = 'DataList.Root';\n\ntype DataListItemElement = HTMLDivElement;\ntype DataListItemOwnProps = GetPropDefTypes<typeof dataListItemPropDefs>;\ninterface DataListItemProps\n  extends ComponentPropsWithout<'div', RemovedProps>,\n    DataListItemOwnProps {}\nconst DataListItem = React.forwardRef<DataListItemElement, DataListItemProps>(\n  (props, forwardedRef) => {\n    const { className, ...itemProps } = extractProps(props, dataListItemPropDefs);\n    return (\n      <div {...itemProps} ref={forwardedRef} className={classNames('rt-DataListItem', className)} />\n    );\n  }\n);\nDataListItem.displayName = 'DataList.Item';\n\ntype DataListLabelElement = React.ElementRef<'dt'>;\ntype DataListLabelOwnProps = GetPropDefTypes<typeof dataListLabelPropDefs>;\ninterface DataListLabelProps\n  extends ComponentPropsWithout<'dt', RemovedProps>,\n    DataListLabelOwnProps {}\nconst DataListLabel = React.forwardRef<DataListLabelElement, DataListLabelProps>(\n  (props, forwardedRef) => {\n    const { className, color, ...labelProps } = extractProps(props, dataListLabelPropDefs);\n    return (\n      <dt\n        {...labelProps}\n        data-accent-color={color}\n        ref={forwardedRef}\n        className={classNames('rt-DataListLabel', className)}\n      />\n    );\n  }\n);\nDataListLabel.displayName = 'DataList.Label';\n\ntype DataListValueElement = React.ElementRef<'dd'>;\ninterface DataListValueProps extends ComponentPropsWithout<'dd', RemovedProps> {}\nconst DataListValue = React.forwardRef<DataListValueElement, DataListValueProps>(\n  ({ children, className, ...props }, forwardedRef) => (\n    <dd {...props} ref={forwardedRef} className={classNames(className, 'rt-DataListValue')}>\n      {children}\n    </dd>\n  )\n);\nDataListValue.displayName = 'DataList.Value';\n\nexport {\n  DataListRoot as Root,\n  DataListItem as Item,\n  DataListLabel as Label,\n  DataListValue as Value,\n};\nexport type {\n  DataListRootProps as RootProps,\n  DataListItemProps as ItemProps,\n  DataListLabelProps as LabelProps,\n  DataListValueProps as ValueProps,\n};\n"],"mappings":"AAAA,OAAOA,CAAA,MAAgB;AACvB,YAAYC,CAAA,MAAW;AAEvB,SAASC,IAAA,IAAAC,CAAA,QAAY;AACrB,SACEC,oBAAA,IAAAC,CAAA,EACAC,oBAAA,IAAAC,CAAA,EACAC,qBAAA,IAAAC,CAAA,QACK;AACP,SAASC,YAAA,IAAAC,CAAA,QAAoB;AAC7B,SAASC,cAAA,IAAAC,CAAA,QAAsB;AAY/B,MAAMC,CAAA,GAAeb,CAAA,CAAMc,UAAA,CACzB,CAACC,CAAA,EAAOC,CAAA,KAAiB;EACvB,MAAM;IAAEC,SAAA,EAAAC,CAAA;IAAW,GAAGC;EAAc,IAAIT,CAAA,CACtCK,CAAA,EACAX,CAAA,EACAQ,CACF;EACA,OACEZ,CAAA,CAAAoB,aAAA,CAAClB,CAAA;IAAKmB,OAAA,EAAO;EAAA,GACXrB,CAAA,CAAAoB,aAAA,CAAC;IACE,GAAGD,CAAA;IACJG,GAAA,EAAKN,CAAA;IACLC,SAAA,EAAWlB,CAAA,CAAW,mBAAmBmB,CAAS;EAAA,CACpD,CACF,CAEJ;AAAA,CACF;AACAL,CAAA,CAAaU,WAAA,GAAc;AAO3B,MAAMC,CAAA,GAAexB,CAAA,CAAMc,UAAA,CACzB,CAACC,CAAA,EAAOC,CAAA,KAAiB;EACvB,MAAM;IAAEC,SAAA,EAAAC,CAAA;IAAW,GAAGC;EAAU,IAAIT,CAAA,CAAaK,CAAA,EAAOT,CAAoB;EAC5E,OACEN,CAAA,CAAAoB,aAAA,CAAC;IAAK,GAAGD,CAAA;IAAWG,GAAA,EAAKN,CAAA;IAAcC,SAAA,EAAWlB,CAAA,CAAW,mBAAmBmB,CAAS;EAAA,CAAG,CAEhG;AAAA,CACF;AACAM,CAAA,CAAaD,WAAA,GAAc;AAO3B,MAAME,CAAA,GAAgBzB,CAAA,CAAMc,UAAA,CAC1B,CAACC,CAAA,EAAOC,CAAA,KAAiB;EACvB,MAAM;IAAEC,SAAA,EAAAC,CAAA;IAAWQ,KAAA,EAAAP,CAAA;IAAO,GAAGQ;EAAW,IAAIjB,CAAA,CAAaK,CAAA,EAAOP,CAAqB;EACrF,OACER,CAAA,CAAAoB,aAAA,CAAC;IACE,GAAGO,CAAA;IACJ,qBAAmBR,CAAA;IACnBG,GAAA,EAAKN,CAAA;IACLC,SAAA,EAAWlB,CAAA,CAAW,oBAAoBmB,CAAS;EAAA,CACrD,CAEJ;AAAA,CACF;AACAO,CAAA,CAAcF,WAAA,GAAc;AAI5B,MAAMK,CAAA,GAAgB5B,CAAA,CAAMc,UAAA,CAC1B,CAAC;EAAEe,QAAA,EAAAd,CAAA;EAAUE,SAAA,EAAAD,CAAA;EAAW,GAAGE;AAAM,GAAGC,CAAA,KAClCnB,CAAA,CAAAoB,aAAA,CAAC;EAAI,GAAGF,CAAA;EAAOI,GAAA,EAAKH,CAAA;EAAcF,SAAA,EAAWlB,CAAA,CAAWiB,CAAA,EAAW,kBAAkB;AAAA,GAClFD,CACH,CAEJ;AACAa,CAAA,CAAcL,WAAA,GAAc;AAAA,SAAAC,CAAA,IAAAM,IAAA,EAAAL,CAAA,IAAAM,KAAA,EAAAlB,CAAA,IAAAmB,IAAA,EAAAJ,CAAA,IAAAK,KAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}