{"ast":null,"code":"import * as o from \"react\";\nimport a from \"classnames\";\nimport { extractProps as n } from \"../helpers/extract-props.js\";\nimport { layoutPropDefs as i } from \"../props/layout.props.js\";\nimport { marginPropDefs as P } from \"../props/margin.props.js\";\nimport { Slot as x } from \"./slot.js\";\nimport { flexPropDefs as f } from \"./flex.props.js\";\nconst p = o.forwardRef((r, e) => {\n  const {\n    className: s,\n    asChild: t,\n    as: m = \"div\",\n    ...l\n  } = n(r, f, i, P);\n  return o.createElement(t ? x : m, {\n    ...l,\n    ref: e,\n    className: a(\"rt-Flex\", s)\n  });\n});\np.displayName = \"Flex\";\nexport { p as Flex };","map":{"version":3,"names":["o","a","extractProps","n","layoutPropDefs","i","marginPropDefs","P","Slot","x","flexPropDefs","f","p","forwardRef","r","e","className","s","asChild","t","as","m","l","createElement","ref","displayName","Flex"],"sources":["C:\\Users\\Seulgi Baek\\vscode\\databasedesign\\database_project\\frontend\\node_modules\\@radix-ui\\themes\\src\\components\\flex.tsx"],"sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\n\nimport { extractProps } from '../helpers/extract-props.js';\nimport { layoutPropDefs } from '../props/layout.props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\nimport { Slot } from './slot.js';\nimport { flexPropDefs } from './flex.props.js';\n\nimport type { FlexOwnProps } from './flex.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { LayoutProps } from '../props/layout.props.js';\nimport type { MarginProps } from '../props/margin.props.js';\n\ntype FlexElement = React.ElementRef<'div'>;\ninterface CommonFlexProps extends MarginProps, LayoutProps, FlexOwnProps {}\ntype FlexDivProps = { as?: 'div' } & ComponentPropsWithout<'div', RemovedProps>;\ntype FlexSpanProps = { as: 'span' } & ComponentPropsWithout<'span', RemovedProps>;\ntype FlexProps = CommonFlexProps & (FlexSpanProps | FlexDivProps);\n\nconst Flex = React.forwardRef<FlexElement, FlexProps>((props, forwardedRef) => {\n  const {\n    className,\n    asChild,\n    as: Tag = 'div',\n    ...flexProps\n  } = extractProps(props, flexPropDefs, layoutPropDefs, marginPropDefs);\n  const Comp = asChild ? Slot : Tag;\n  return <Comp {...flexProps} ref={forwardedRef} className={classNames('rt-Flex', className)} />;\n});\nFlex.displayName = 'Flex';\n\nexport { Flex };\nexport type { FlexProps };\n"],"mappings":"AAAA,YAAYA,CAAA,MAAW;AACvB,OAAOC,CAAA,MAAgB;AAEvB,SAASC,YAAA,IAAAC,CAAA,QAAoB;AAC7B,SAASC,cAAA,IAAAC,CAAA,QAAsB;AAC/B,SAASC,cAAA,IAAAC,CAAA,QAAsB;AAC/B,SAASC,IAAA,IAAAC,CAAA,QAAY;AACrB,SAASC,YAAA,IAAAC,CAAA,QAAoB;AAa7B,MAAMC,CAAA,GAAOZ,CAAA,CAAMa,UAAA,CAAmC,CAACC,CAAA,EAAOC,CAAA,KAAiB;EAC7E,MAAM;IACJC,SAAA,EAAAC,CAAA;IACAC,OAAA,EAAAC,CAAA;IACAC,EAAA,EAAIC,CAAA,GAAM;IACV,GAAGC;EACL,IAAInB,CAAA,CAAaW,CAAA,EAAOH,CAAA,EAAcN,CAAA,EAAgBE,CAAc;EAEpE,OAAOP,CAAA,CAAAuB,aAAA,CADMJ,CAAA,GAAUV,CAAA,GAAOY,CAAA,EACtB;IAAM,GAAGC,CAAA;IAAWE,GAAA,EAAKT,CAAA;IAAcC,SAAA,EAAWf,CAAA,CAAW,WAAWgB,CAAS;EAAA,CAAG,CAC9F;AAAA,CAAC;AACDL,CAAA,CAAKa,WAAA,GAAc;AAAA,SAAAb,CAAA,IAAAc,IAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}