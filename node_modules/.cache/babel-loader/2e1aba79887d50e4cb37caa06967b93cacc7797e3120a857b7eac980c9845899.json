{"ast":null,"code":"// packages/react/aspect-ratio/src/AspectRatio.tsx\nimport * as React from \"react\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { jsx } from \"react/jsx-runtime\";\nvar NAME = \"AspectRatio\";\nvar AspectRatio = React.forwardRef((props, forwardedRef) => {\n  const {\n    ratio = 1 / 1,\n    style,\n    ...aspectRatioProps\n  } = props;\n  return /* @__PURE__ */jsx(\"div\", {\n    style: {\n      // ensures inner element is contained\n      position: \"relative\",\n      // ensures padding bottom trick maths works\n      width: \"100%\",\n      paddingBottom: `${100 / ratio}%`\n    },\n    \"data-radix-aspect-ratio-wrapper\": \"\",\n    children: /* @__PURE__ */jsx(Primitive.div, {\n      ...aspectRatioProps,\n      ref: forwardedRef,\n      style: {\n        ...style,\n        // ensures children expand in ratio\n        position: \"absolute\",\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    })\n  });\n});\nAspectRatio.displayName = NAME;\nvar Root = AspectRatio;\nexport { AspectRatio, Root };","map":{"version":3,"names":["React","Primitive","jsx","NAME","AspectRatio","forwardRef","props","forwardedRef","ratio","style","aspectRatioProps","position","width","paddingBottom","children","div","ref","top","right","bottom","left","displayName","Root"],"sources":["C:\\Users\\Seulgi Baek\\vscode\\databasedesign\\database_project\\frontend\\node_modules\\@radix-ui\\react-aspect-ratio\\src\\AspectRatio.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Primitive } from '@radix-ui/react-primitive';\n\n/* -------------------------------------------------------------------------------------------------\n * AspectRatio\n * -----------------------------------------------------------------------------------------------*/\n\nconst NAME = 'AspectRatio';\n\ntype AspectRatioElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface AspectRatioProps extends PrimitiveDivProps {\n  ratio?: number;\n}\n\nconst AspectRatio = React.forwardRef<AspectRatioElement, AspectRatioProps>(\n  (props, forwardedRef) => {\n    const { ratio = 1 / 1, style, ...aspectRatioProps } = props;\n    return (\n      <div\n        style={{\n          // ensures inner element is contained\n          position: 'relative',\n          // ensures padding bottom trick maths works\n          width: '100%',\n          paddingBottom: `${100 / ratio}%`,\n        }}\n        data-radix-aspect-ratio-wrapper=\"\"\n      >\n        <Primitive.div\n          {...aspectRatioProps}\n          ref={forwardedRef}\n          style={{\n            ...style,\n            // ensures children expand in ratio\n            position: 'absolute',\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0,\n          }}\n        />\n      </div>\n    );\n  }\n);\n\nAspectRatio.displayName = NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = AspectRatio;\n\nexport {\n  AspectRatio,\n  //\n  Root,\n};\nexport type { AspectRatioProps };\n"],"mappings":";AAAA,YAAYA,KAAA,MAAW;AACvB,SAASC,SAAA,QAAiB;AA4BlB,SAAAC,GAAA;AAtBR,IAAMC,IAAA,GAAO;AAQb,IAAMC,WAAA,GAAoBJ,KAAA,CAAAK,UAAA,CACxB,CAACC,KAAA,EAAOC,YAAA,KAAiB;EACvB,MAAM;IAAEC,KAAA,GAAQ,IAAI;IAAGC,KAAA;IAAO,GAAGC;EAAiB,IAAIJ,KAAA;EACtD,OACE,eAAAJ,GAAA,CAAC;IACCO,KAAA,EAAO;MAAA;MAELE,QAAA,EAAU;MAAA;MAEVC,KAAA,EAAO;MACPC,aAAA,EAAe,GAAG,MAAML,KAAK;IAC/B;IACA,mCAAgC;IAEhCM,QAAA,iBAAAZ,GAAA,CAACD,SAAA,CAAUc,GAAA,EAAV;MACE,GAAGL,gBAAA;MACJM,GAAA,EAAKT,YAAA;MACLE,KAAA,EAAO;QACL,GAAGA,KAAA;QAAA;QAEHE,QAAA,EAAU;QACVM,GAAA,EAAK;QACLC,KAAA,EAAO;QACPC,MAAA,EAAQ;QACRC,IAAA,EAAM;MACR;IAAA,CACF;EAAA,CACF;AAEJ,CACF;AAEAhB,WAAA,CAAYiB,WAAA,GAAclB,IAAA;AAI1B,IAAMmB,IAAA,GAAOlB,WAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}