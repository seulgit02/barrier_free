{"ast":null,"code":"import * as r from \"react\";\nimport a from \"classnames\";\nimport { Slot as d } from \"./slot.js\";\nimport { gridPropDefs as n } from \"./grid.props.js\";\nimport { extractProps as P } from \"../helpers/extract-props.js\";\nimport { layoutPropDefs as f } from \"../props/layout.props.js\";\nimport { marginPropDefs as G } from \"../props/margin.props.js\";\nconst o = r.forwardRef((p, s) => {\n  const {\n    className: t,\n    asChild: e,\n    as: i = \"div\",\n    ...m\n  } = P(p, n, f, G);\n  return r.createElement(e ? d : i, {\n    ...m,\n    ref: s,\n    className: a(\"rt-Grid\", t)\n  });\n});\no.displayName = \"Grid\";\nexport { o as Grid };","map":{"version":3,"names":["r","a","Slot","d","gridPropDefs","n","extractProps","P","layoutPropDefs","f","marginPropDefs","G","o","forwardRef","p","s","className","t","asChild","e","as","i","m","createElement","ref","displayName","Grid"],"sources":["C:\\Users\\Seulgi Baek\\vscode\\databasedesign\\database_project\\frontend\\node_modules\\@radix-ui\\themes\\src\\components\\grid.tsx"],"sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\n\nimport { Slot } from './slot.js';\nimport { gridPropDefs } from './grid.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { layoutPropDefs } from '../props/layout.props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { LayoutProps } from '../props/layout.props.js';\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { GridOwnProps } from './grid.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\n\ntype GridElement = React.ElementRef<'div'>;\ninterface CommonGridProps extends MarginProps, LayoutProps, GridOwnProps {}\ntype GridDivProps = { as?: 'div' } & ComponentPropsWithout<'div', RemovedProps>;\ntype GridSpanProps = { as: 'span' } & ComponentPropsWithout<'span', RemovedProps>;\ntype GridProps = CommonGridProps & (GridSpanProps | GridDivProps);\n\nconst Grid = React.forwardRef<GridElement, GridProps>((props, forwardedRef) => {\n  const {\n    className,\n    asChild,\n    as: Tag = 'div',\n    ...gridProps\n  } = extractProps(props, gridPropDefs, layoutPropDefs, marginPropDefs);\n  const Comp = asChild ? Slot : Tag;\n  return <Comp {...gridProps} ref={forwardedRef} className={classNames('rt-Grid', className)} />;\n});\nGrid.displayName = 'Grid';\n\nexport { Grid };\nexport type { GridProps };\n"],"mappings":"AAAA,YAAYA,CAAA,MAAW;AACvB,OAAOC,CAAA,MAAgB;AAEvB,SAASC,IAAA,IAAAC,CAAA,QAAY;AACrB,SAASC,YAAA,IAAAC,CAAA,QAAoB;AAC7B,SAASC,YAAA,IAAAC,CAAA,QAAoB;AAC7B,SAASC,cAAA,IAAAC,CAAA,QAAsB;AAC/B,SAASC,cAAA,IAAAC,CAAA,QAAsB;AAa/B,MAAMC,CAAA,GAAOZ,CAAA,CAAMa,UAAA,CAAmC,CAACC,CAAA,EAAOC,CAAA,KAAiB;EAC7E,MAAM;IACJC,SAAA,EAAAC,CAAA;IACAC,OAAA,EAAAC,CAAA;IACAC,EAAA,EAAIC,CAAA,GAAM;IACV,GAAGC;EACL,IAAIf,CAAA,CAAaO,CAAA,EAAOT,CAAA,EAAcI,CAAA,EAAgBE,CAAc;EAEpE,OAAOX,CAAA,CAAAuB,aAAA,CADMJ,CAAA,GAAUhB,CAAA,GAAOkB,CAAA,EACtB;IAAM,GAAGC,CAAA;IAAWE,GAAA,EAAKT,CAAA;IAAcC,SAAA,EAAWf,CAAA,CAAW,WAAWgB,CAAS;EAAA,CAAG,CAC9F;AAAA,CAAC;AACDL,CAAA,CAAKa,WAAA,GAAc;AAAA,SAAAb,CAAA,IAAAc,IAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}