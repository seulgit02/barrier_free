{"ast":null,"code":"import { breakpoints as c } from \"../props/prop-def.js\";\nimport { hasOwnProperty as a } from \"./has-own-property.js\";\nimport { isResponsiveObject as d } from \"./is-responsive-object.js\";\nfunction R({\n  className: r,\n  customProperties: n,\n  ...t\n}) {\n  const p = g({\n      allowArbitraryValues: !0,\n      className: r,\n      ...t\n    }),\n    e = m({\n      customProperties: n,\n      ...t\n    });\n  return [p, e];\n}\nfunction g({\n  allowArbitraryValues: r,\n  value: n,\n  className: t,\n  propValues: p,\n  parseValue: e = s => s\n}) {\n  const s = [];\n  if (n) {\n    if (typeof n == \"string\" && p.includes(n)) return l(t, n, e);\n    if (d(n)) {\n      const i = n;\n      for (const o in i) {\n        if (!a(i, o) || !c.includes(o)) continue;\n        const u = i[o];\n        if (u !== void 0) {\n          if (p.includes(u)) {\n            const f = l(t, u, e),\n              v = o === \"initial\" ? f : `${o}:${f}`;\n            s.push(v);\n          } else if (r) {\n            const f = o === \"initial\" ? t : `${o}:${t}`;\n            s.push(f);\n          }\n        }\n      }\n      return s.join(\" \");\n    }\n    if (r) return t;\n  }\n}\nfunction l(r, n, t) {\n  const p = r ? \"-\" : \"\",\n    e = t(n),\n    s = e?.startsWith(\"-\"),\n    i = s ? \"-\" : \"\",\n    o = s ? e?.substring(1) : e;\n  return `${i}${r}${p}${o}`;\n}\nfunction m({\n  customProperties: r,\n  value: n,\n  propValues: t,\n  parseValue: p = e => e\n}) {\n  let e = {};\n  if (!(!n || typeof n == \"string\" && t.includes(n))) {\n    if (typeof n == \"string\" && (e = Object.fromEntries(r.map(s => [s, n]))), d(n)) {\n      const s = n;\n      for (const i in s) {\n        if (!a(s, i) || !c.includes(i)) continue;\n        const o = s[i];\n        if (!t.includes(o)) for (const u of r) e = {\n          [i === \"initial\" ? u : `${u}-${i}`]: o,\n          ...e\n        };\n      }\n    }\n    for (const s in e) {\n      const i = e[s];\n      i !== void 0 && (e[s] = p(i));\n    }\n    return e;\n  }\n}\nexport { g as getResponsiveClassNames, m as getResponsiveCustomProperties, R as getResponsiveStyles };","map":{"version":3,"names":["breakpoints","c","hasOwnProperty","a","isResponsiveObject","d","R","className","r","customProperties","n","t","p","g","allowArbitraryValues","e","m","value","propValues","parseValue","s","includes","l","i","o","u","f","v","push","join","startsWith","substring","Object","fromEntries","map","getResponsiveClassNames","getResponsiveCustomProperties","getResponsiveStyles"],"sources":["C:\\Users\\Seulgi Baek\\vscode\\databasedesign\\database_project\\frontend\\node_modules\\@radix-ui\\themes\\src\\helpers\\get-responsive-styles.ts"],"sourcesContent":["import { breakpoints } from '../props/prop-def.js';\nimport { hasOwnProperty } from './has-own-property.js';\nimport { isResponsiveObject } from './is-responsive-object.js';\n\nimport type { Responsive, Union } from '../props/prop-def.js';\n\ninterface GetResponsiveStylesOptions {\n  className: string;\n  customProperties: `--${string}`[];\n  value: Responsive<Union> | Responsive<string> | undefined;\n  propValues: string[] | readonly string[];\n  parseValue?: (value: string) => string | undefined;\n}\n\nfunction getResponsiveStyles({ className, customProperties, ...args }: GetResponsiveStylesOptions) {\n  const responsiveClassNames = getResponsiveClassNames({\n    allowArbitraryValues: true,\n    className,\n    ...args,\n  });\n\n  const responsiveCustomProperties = getResponsiveCustomProperties({ customProperties, ...args });\n  return [responsiveClassNames, responsiveCustomProperties] as const;\n}\n\ninterface GetResponsiveClassNamesOptions {\n  allowArbitraryValues?: boolean;\n  className: string;\n  value: Responsive<Union> | Responsive<string> | undefined;\n  propValues: string[] | readonly string[];\n  parseValue?: (value: string) => string | undefined;\n}\n\nfunction getResponsiveClassNames({\n  allowArbitraryValues,\n  value,\n  className,\n  propValues,\n  parseValue = (value) => value,\n}: GetResponsiveClassNamesOptions): string | undefined {\n  const classNames: string[] = [];\n\n  if (!value) {\n    return undefined;\n  }\n\n  if (typeof value === 'string' && propValues.includes(value)) {\n    return getBaseClassName(className, value, parseValue);\n  }\n\n  if (isResponsiveObject(value)) {\n    const object = value;\n\n    for (const bp in object) {\n      // Make sure we are not iterating over keys that aren't breakpoints\n      if (!hasOwnProperty(object, bp) || !breakpoints.includes(bp)) {\n        continue;\n      }\n\n      const value = object[bp];\n\n      if (value !== undefined) {\n        if (propValues.includes(value)) {\n          const baseClassName = getBaseClassName(className, value, parseValue);\n          const bpClassName = bp === 'initial' ? baseClassName : `${bp}:${baseClassName}`;\n          classNames.push(bpClassName);\n        } else if (allowArbitraryValues) {\n          const bpClassName = bp === 'initial' ? className : `${bp}:${className}`;\n          classNames.push(bpClassName);\n        }\n      }\n    }\n\n    return classNames.join(' ');\n  }\n\n  if (allowArbitraryValues) {\n    return className;\n  }\n}\n\nfunction getBaseClassName(\n  className: string,\n  value: string,\n  parseValue: (value: string) => string | undefined\n): string {\n  const delimiter = className ? '-' : '';\n  const matchedValue = parseValue(value);\n  const isNegative = matchedValue?.startsWith('-');\n  const minus = isNegative ? '-' : '';\n  const absoluteValue = isNegative ? matchedValue?.substring(1) : matchedValue;\n  return `${minus}${className}${delimiter}${absoluteValue}`;\n}\n\ninterface GetResponsiveCustomPropertiesOptions {\n  customProperties: `--${string}`[];\n  value: Responsive<Union> | Responsive<string> | undefined;\n  propValues: string[] | readonly string[];\n  parseValue?: (value: string) => string | undefined;\n}\n\nfunction getResponsiveCustomProperties({\n  customProperties,\n  value,\n  propValues,\n  parseValue = (value) => value,\n}: GetResponsiveCustomPropertiesOptions) {\n  let styles: Record<string, string | undefined> = {};\n\n  // Don't generate custom properties if the value is not arbitrary\n  if (!value || (typeof value === 'string' && propValues.includes(value))) {\n    return undefined;\n  }\n\n  if (typeof value === 'string') {\n    styles = Object.fromEntries(customProperties.map((prop) => [prop, value]));\n  }\n\n  if (isResponsiveObject(value)) {\n    const object = value;\n\n    for (const bp in object) {\n      // Make sure we are not iterating over keys that aren't breakpoints\n      if (!hasOwnProperty(object, bp) || !breakpoints.includes(bp)) {\n        continue;\n      }\n\n      const value = object[bp];\n\n      // Don't generate a custom property if the value is not arbitrary\n      if (propValues.includes(value)) {\n        continue;\n      }\n\n      for (const customProperty of customProperties) {\n        const bpProperty = bp === 'initial' ? customProperty : `${customProperty}-${bp}`;\n\n        styles = {\n          [bpProperty]: value,\n          ...styles,\n        };\n      }\n    }\n  }\n\n  for (const key in styles) {\n    const value = styles[key];\n    if (value !== undefined) {\n      styles[key] = parseValue(value);\n    }\n  }\n\n  return styles;\n}\n\nexport { getResponsiveStyles, getResponsiveCustomProperties, getResponsiveClassNames };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}