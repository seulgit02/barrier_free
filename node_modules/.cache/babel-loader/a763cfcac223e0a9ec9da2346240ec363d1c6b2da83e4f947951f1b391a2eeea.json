{"ast":null,"code":"\"use client\";\n\nimport * as t from \"react\";\nimport d from \"classnames\";\nimport { composeRefs as F } from \"@radix-ui/react-compose-refs\";\nimport { textFieldRootPropDefs as R, textFieldSlotPropDefs as y } from \"./text-field.props.js\";\nimport { extractProps as m } from \"../helpers/extract-props.js\";\nimport { marginPropDefs as S } from \"../props/margin.props.js\";\nconst u = t.forwardRef((r, s) => {\n  const e = t.useRef(null),\n    {\n      children: l,\n      className: i,\n      color: p,\n      radius: f,\n      style: x,\n      ...P\n    } = m(r, R, S);\n  return t.createElement(\"div\", {\n    \"data-accent-color\": p,\n    \"data-radius\": f,\n    style: x,\n    className: d(\"rt-TextFieldRoot\", i),\n    onPointerDown: T => {\n      const n = T.target;\n      if (n.closest(\"input, button, a\")) return;\n      const o = e.current;\n      if (!o) return;\n      const a = n.closest(`\n            .rt-TextFieldSlot[data-side='right'],\n            .rt-TextFieldSlot:not([data-side='right']) ~ .rt-TextFieldSlot:not([data-side='left'])\n          `) ? o.value.length : 0;\n      requestAnimationFrame(() => {\n        try {\n          o.setSelectionRange(a, a);\n        } catch {}\n        o.focus();\n      });\n    }\n  }, t.createElement(\"input\", {\n    spellCheck: \"false\",\n    ...P,\n    ref: F(e, s),\n    className: \"rt-reset rt-TextFieldInput\"\n  }), l);\n});\nu.displayName = \"TextField.Root\";\nconst c = t.forwardRef((r, s) => {\n  const {\n    className: e,\n    color: l,\n    side: i,\n    ...p\n  } = m(r, y);\n  return t.createElement(\"div\", {\n    \"data-accent-color\": l,\n    \"data-side\": i,\n    ...p,\n    ref: s,\n    className: d(\"rt-TextFieldSlot\", e)\n  });\n});\nc.displayName = \"TextField.Slot\";\nexport { u as Root, c as Slot };","map":{"version":3,"names":["t","d","composeRefs","F","textFieldRootPropDefs","R","textFieldSlotPropDefs","y","extractProps","m","marginPropDefs","S","u","forwardRef","r","s","e","useRef","children","l","className","i","color","p","radius","f","style","x","P","createElement","onPointerDown","T","n","target","closest","o","current","a","value","length","requestAnimationFrame","setSelectionRange","focus","spellCheck","ref","displayName","c","side","Root","Slot"],"sources":["C:\\Users\\Seulgi Baek\\vscode\\databasedesign\\database_project\\frontend\\node_modules\\@radix-ui\\themes\\src\\components\\text-field.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { composeRefs } from '@radix-ui/react-compose-refs';\n\nimport { textFieldRootPropDefs, textFieldSlotPropDefs } from './text-field.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { NotInputTextualAttributes } from '../helpers/input-attributes.js';\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype TextFieldRootElement = React.ElementRef<'input'>;\ntype TextFieldRootOwnProps = GetPropDefTypes<typeof textFieldRootPropDefs> & {\n  defaultValue?: string | number;\n  value?: string | number;\n  type?:\n    | 'date'\n    | 'datetime-local'\n    | 'email'\n    | 'hidden'\n    | 'month'\n    | 'number'\n    | 'password'\n    | 'search'\n    | 'tel'\n    | 'text'\n    | 'time'\n    | 'url'\n    | 'week';\n};\ntype TextFieldInputProps = ComponentPropsWithout<\n  'input',\n  NotInputTextualAttributes | 'color' | 'defaultValue' | 'size' | 'type' | 'value'\n>;\ninterface TextFieldRootProps extends TextFieldInputProps, MarginProps, TextFieldRootOwnProps {}\nconst TextFieldRoot = React.forwardRef<TextFieldRootElement, TextFieldRootProps>(\n  (props, forwardedRef) => {\n    const inputRef = React.useRef<HTMLInputElement>(null);\n    const { children, className, color, radius, style, ...inputProps } = extractProps(\n      props,\n      textFieldRootPropDefs,\n      marginPropDefs\n    );\n    return (\n      <div\n        data-accent-color={color}\n        data-radius={radius}\n        style={style}\n        className={classNames('rt-TextFieldRoot', className)}\n        onPointerDown={(event) => {\n          const target = event.target as HTMLElement;\n          if (target.closest('input, button, a')) return;\n\n          const input = inputRef.current;\n          if (!input) return;\n\n          // Same selector as in the CSS to find the right slot\n          const isRightSlot = target.closest(`\n            .rt-TextFieldSlot[data-side='right'],\n            .rt-TextFieldSlot:not([data-side='right']) ~ .rt-TextFieldSlot:not([data-side='left'])\n          `);\n\n          const cursorPosition = isRightSlot ? input.value.length : 0;\n\n          requestAnimationFrame(() => {\n            // Only some input types support this, browsers will throw an error if not supported\n            // See: https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setSelectionRange#:~:text=Note%20that%20according,not%20support%20selection%22.\n            try {\n              input.setSelectionRange(cursorPosition, cursorPosition);\n            } catch (e) {}\n            input.focus();\n          });\n        }}\n      >\n        <input\n          spellCheck=\"false\"\n          {...inputProps}\n          ref={composeRefs(inputRef, forwardedRef)}\n          className=\"rt-reset rt-TextFieldInput\"\n        />\n        {children}\n      </div>\n    );\n  }\n);\nTextFieldRoot.displayName = 'TextField.Root';\n\ntype TextFieldSlotElement = React.ElementRef<'div'>;\ntype TextFieldSlotOwnProps = GetPropDefTypes<typeof textFieldSlotPropDefs>;\ninterface TextFieldSlotProps\n  extends ComponentPropsWithout<'div', RemovedProps>,\n    TextFieldSlotOwnProps {}\nconst TextFieldSlot = React.forwardRef<TextFieldSlotElement, TextFieldSlotProps>(\n  (props, forwardedRef) => {\n    const { className, color, side, ...slotProps } = extractProps(props, textFieldSlotPropDefs);\n    return (\n      <div\n        data-accent-color={color}\n        data-side={side}\n        {...slotProps}\n        ref={forwardedRef}\n        className={classNames('rt-TextFieldSlot', className)}\n      />\n    );\n  }\n);\nTextFieldSlot.displayName = 'TextField.Slot';\n\nexport { TextFieldRoot as Root, TextFieldSlot as Slot };\nexport type { TextFieldRootProps as RootProps, TextFieldSlotProps as SlotProps };\n"],"mappings":";;AAEA,YAAYA,CAAA,MAAW;AACvB,OAAOC,CAAA,MAAgB;AACvB,SAASC,WAAA,IAAAC,CAAA,QAAmB;AAE5B,SAASC,qBAAA,IAAAC,CAAA,EAAuBC,qBAAA,IAAAC,CAAA,QAA6B;AAC7D,SAASC,YAAA,IAAAC,CAAA,QAAoB;AAC7B,SAASC,cAAA,IAAAC,CAAA,QAAsB;AA+B/B,MAAMC,CAAA,GAAgBZ,CAAA,CAAMa,UAAA,CAC1B,CAACC,CAAA,EAAOC,CAAA,KAAiB;EACvB,MAAMC,CAAA,GAAWhB,CAAA,CAAMiB,MAAA,CAAyB,IAAI;IAC9C;MAAEC,QAAA,EAAAC,CAAA;MAAUC,SAAA,EAAAC,CAAA;MAAWC,KAAA,EAAAC,CAAA;MAAOC,MAAA,EAAAC,CAAA;MAAQC,KAAA,EAAAC,CAAA;MAAO,GAAGC;IAAW,IAAInB,CAAA,CACnEK,CAAA,EACAT,CAAA,EACAM,CACF;EACA,OACEX,CAAA,CAAA6B,aAAA,CAAC;IACC,qBAAmBN,CAAA;IACnB,eAAaE,CAAA;IACbC,KAAA,EAAOC,CAAA;IACPP,SAAA,EAAWnB,CAAA,CAAW,oBAAoBoB,CAAS;IACnDS,aAAA,EAAgBC,CAAA,IAAU;MACxB,MAAMC,CAAA,GAASD,CAAA,CAAME,MAAA;MACrB,IAAID,CAAA,CAAOE,OAAA,CAAQ,kBAAkB,GAAG;MAExC,MAAMC,CAAA,GAAQnB,CAAA,CAASoB,OAAA;MACvB,IAAI,CAACD,CAAA,EAAO;MAQZ,MAAME,CAAA,GALcL,CAAA,CAAOE,OAAA,CAAQ;AAAA;AAAA;AAAA,WAGlC,IAEoCC,CAAA,CAAMG,KAAA,CAAMC,MAAA,GAAS;MAE1DC,qBAAA,CAAsB,MAAM;QAG1B,IAAI;UACFL,CAAA,CAAMM,iBAAA,CAAkBJ,CAAA,EAAgBA,CAAc,CACxD;QAAA,QAAY,CAAC;QACbF,CAAA,CAAMO,KAAA,CAAM,CACd;MAAA,CAAC,CACH;IAAA;EAAA,GAEA1C,CAAA,CAAA6B,aAAA,CAAC;IACCc,UAAA,EAAW;IACV,GAAGf,CAAA;IACJgB,GAAA,EAAKzC,CAAA,CAAYa,CAAA,EAAUD,CAAY;IACvCK,SAAA,EAAU;EAAA,CACZ,GACCD,CACH,CAEJ;AAAA,CACF;AACAP,CAAA,CAAciC,WAAA,GAAc;AAO5B,MAAMC,CAAA,GAAgB9C,CAAA,CAAMa,UAAA,CAC1B,CAACC,CAAA,EAAOC,CAAA,KAAiB;EACvB,MAAM;IAAEK,SAAA,EAAAJ,CAAA;IAAWM,KAAA,EAAAH,CAAA;IAAO4B,IAAA,EAAA1B,CAAA;IAAM,GAAGE;EAAU,IAAId,CAAA,CAAaK,CAAA,EAAOP,CAAqB;EAC1F,OACEP,CAAA,CAAA6B,aAAA,CAAC;IACC,qBAAmBV,CAAA;IACnB,aAAWE,CAAA;IACV,GAAGE,CAAA;IACJqB,GAAA,EAAK7B,CAAA;IACLK,SAAA,EAAWnB,CAAA,CAAW,oBAAoBe,CAAS;EAAA,CACrD,CAEJ;AAAA,CACF;AACA8B,CAAA,CAAcD,WAAA,GAAc;AAAA,SAAAjC,CAAA,IAAAoC,IAAA,EAAAF,CAAA,IAAAG,IAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}